author_repo,wf_contents,security_policy
huihut/interview,pages-build-deployment' 'active' '21233709,
SerenityOS/serenity,Build' ' lint' ' and test' 'active' '3451514' 'Discord notifications' 'active' '7948007' 'Generate man pages' 'active' '8773237' 'Twitter notifications' 'active' '8803750' 'Commit linter' 'active' '9318730' 'Run test262 with LibJS and push results to the website repo' 'active' '9986180' 'Sonar Cloud Static Analysis' 'active' '12658873' 'PVS-Studio Static Analysis' 'active' '13879535' 'Pull request labeler' 'active' '37482362' 'Build Wasm Modules' 'active' '41193489' 'Package the js repl as a binary artifact' 'active' '42146330,SerenityOS is a hobby operating system developed by volunteers It is' 'unreleased software still in early development and so bugs and vulnerabilities' 'can be safely disclosed publicly If you find an issue we would prefer if you' 'report it as a GitHub issue If your issue was found using a fuzzer please' 'check ossfuzz first to see if it has already been recorded' 'We run a modest Bug Bounty Program to reward people who find certain kinds of' 'exploits in the system See that link for details and to claim your reward 
Awesome-HarmonyOS/HarmonyOS,,
redox-os/redox,,
s-matyukevich/raspberry-pi-os,,
reactos/reactos,Analyze' 'active' '7680786' 'Build' 'active' '1194048' 'cppcheck-action' 'active' '5366893' 'Pull Request Labeler' 'active' '5589977' 'Mark stale issues and pull requests' 'active' '27085022,
phil-opp/blog_os,Build Site' 'active' '171074' 'Build code on schedule' 'active' '2216887' 'Test Suite' 'active' '5640113' 'Code' 'active' '6560279' 'CI' 'active' '7519242' 'Blog' 'active' '14279476' 'Check Links' 'active' '36418083' 'Build Code' 'disabled_manually' '152586,
tuhdo/os01,pages-build-deployment' 'active' '31230046,
rust-embedded/rust-raspberrypi-OS-tutorials,.github/workflows/build_rpi4.yml' 'active' '255110' 'BSP-RPi3' 'active' '9173' 'BSP-RPi4' 'active' '9157' 'Various Sanity Checks' 'active' '177889' 'Integration-Tests' 'active' '108256' 'Boot-and-Unit-Tests' 'active' '108257' 'Xtra-Tests' 'active' '8647973,
AkashSingh3031/The-Complete-FAANG-Preparation,CodeQL' 'active' '10788696' 'pages-build-deployment' 'active' '18060178,
wolverinn/Waking-Up,,
gurugio/lowlevelprogramming-university,pages-build-deployment' 'active' '21003078,
bottlerocket-os/bottlerocket,Build' 'active' '724962' 'CacheDepsAndTools' 'active' '42927969' 'Check' 'active' '35944176' 'golangci-lint' 'active' '41232588' 'pubsys' 'active' '11238805,If you discover a potential security issue in this project we ask that you' 'notify AWSAmazon Security via our vulnerability reporting page or directly via' 'email to awssecurityamazoncom Please do nnoott create a public GitHub issue
NodeOS/NodeOS,,
klange/toaruos,QEMU AArch64 virt' 'active' '19359355' 'Build Image' 'active' '4114838' 'x86-64 CD Image' 'active' '19359356,
yourtion/30dayMakeOS,,
ravynsoft/ravynos,,
includeos/IncludeOS,,
tock/tock,Benchmarks' 'active' '1171334' 'tock-ci' 'active' '1171333' 'Pull Request Labeler' 'active' '4861425' 'litex-sim-ci' 'active' '12592248' 'Rustfmt' 'active' '6417888' 'tock-hw-ci' 'active' '18419656,
oshi/oshi,Coverity Scan' 'active' '3899629' 'Site' 'active' '3899630' 'SonarCloud' 'active' '3899631' 'Sonatype Snapshot Deployment' 'active' '3899632' 'Pull Request CI' 'active' '3917129' 'AIX CI' 'active' '11991549' 'FreeBSD CI' 'active' '11991550' 'Linux CI' 'active' '11991551' 'macOS CI' 'active' '11991552' 'OpenBSD CI' 'active' '11991553' 'Solaris CI' 'active' '11991554' 'Windows CI' 'active' '11991555' 'CodeQL' 'active' '12891135' 'pages-build-deployment' 'active' '17170115' 'Multiarch CI' 'active' '31516066,
nuta/kerla,CI' 'active' '9158760' 'Release' 'active' '15039215,
armbian/build,Build u-boot & BSP' 'active' '13641980' 'Automatic Rebase' 'active' '14138170' 'Automatic Labeler' 'active' '14149071' 'Forked Helper' 'active' '14160941' 'Build train' 'active' '16902027' 'Update Docker' 'active' '17753222' 'Bump Version' 'active' '17811096' 'Smoke tests on DUTs' 'active' '18312024' 'Build Images' 'active' '19428480' 'Scorecards Security Scan' 'active' '27988757' 'Lint On Scripts' 'active' '28462328' 'Build Kernels at PR' 'active' '28462329' 'Check images integrity' 'active' '28523489' 'Build All Desktops' 'active' '32453346' 'Kernel hardening analysis' 'active' '43994524,
amilajack/reading,,
nebulet/nebulet,,
archcraft-os/archcraft,,
theseus-os/Theseus,Clippy Checks' 'active' '30814905' 'Documentation' 'active' '10791303' 'pages-build-deployment' 'active' '16468607,
the-akira/Computer-Science-Resources,,
dyweb/papers-notebook,,
PureDarwin/PureDarwin,Build Pull Request' 'active' '12057995,
skiftOS/skift,,
joshiemoore/snakeware,autoblack_push' 'active' '1445624' 'PythonLint' 'active' '1423590' 'PythonLint' 'active' '1423589,
FydeOS/chromium_os-raspberry_pi,,
PansonPanson/Java-Notes,,
haiku/haiku,,
vlang/vinix,Build Vinix kernel' 'active' '28794647' '.github/workflows/nightly.yml' 'active' '8714193,
Harvey-OS/harvey,harvey' 'active' '1777674,
ivandavidov/minimal,Greetings' 'disabled_manually' '11507340' 'MLL With Integration Tests' 'active' '11507509' 'pages-build-deployment' 'active' '17340397,
ehmicky/cross-platform-node-guide,,
illumos/illumos-gate,,
GimunLee/tech-refrigerator,,
amaneureka/AtomOS,,
KnightOS/KnightOS,,
AnarchyLinux/installer,,
jens-maus/RaspberryMatic,CI Build' 'active' '32675' 'Release Build' 'active' '5502575' 'Snapshot Build' 'active' '5502576' 'pages-build-deployment' 'active' '16408469' 'Auto-Merge Dependabot PRs' 'active' '21797609,SSuuppppoorrtteedd VVeerrssiioonnss' 'As RaspberryMatic is a communitydriven open source project and our resources' 'are limited we accept security fixes only on the latest released version and' 'also on the sources published in the master branch of this GitHub project' 'RReeppoorrttiinngg aa VVuullnneerraabbiilliittyy' 'If you found a securityrelated vulnerability please feel free to report this' 'security problem using our valuable issue tracker on GitHub Furthermore' 'please acknowledge that we will try to respond to your security reports as fast' 'as possible and also please make sure to provide proper examples eg example' 'source code stepbystep explainations on how to reproduce the security issue' 'so that we can reproduce and fix this issue as fas as possible
unikraft/unikraft,,
hermitcore/rusty-hermit,Publish container image' 'active' '1790172' 'Publish Docs' 'active' '11184736' 'Test' 'active' '16254849' 'CI' 'active' '33836434,
ffwff/lilith,,
HelenOS/helenos,,
managarm/managarm,CI' 'active' '2353273' 'Documentation' 'active' '2332831,
JingOS-team/JingOS,,
jubalh/awesome-os,,
LemonOSProject/LemonOS,CI' 'active' '6137249,
brutal-org/brutal,Build and Test (Darwin)' 'active' '14978019' 'Build and Test (Ubuntu)' 'active' '14978020' 'Test coverage (Ubuntu)' 'active' '15452726,
halfer53/winix,C/C++ CI' 'active' '1291733,
realabbas/big-companies-interview-questions,,
dzavalishin/phantomuserland,,
hyperledger/cello,Code Check CI' 'active' '30916368' 'CodeQL' 'active' '27226268' 'Cello CI' 'active' '29145425' 'pages-build-deployment' 'active' '16462850,RReeppoorrttiinngg aa SSeeccuurriittyy BBuugg' 'If you think you have discovered a security issue in any of the Hyperledger' 'projects wed love to hear from you We will take all security bugs seriously' 'and if confirmed upon investigation we will patch it within a reasonable amount' 'of time and release a public security bulletin discussing the impact and credit' 'the discoverer' 'There are two ways to report a security bug The easiest is to email a' 'description of the flaw and any related information eg reproduction steps' 'version to security at hyperledger dot org' 'The other way is to file a confidential security bug in our JIRA bug tracking' 'system Be sure to set the Security Level to Security issue' 'The process by which the Hyperledger Security Team handles security bugs is' 'documented further in our Defect Response page on our wiki
godarch/darch,,
nieklinnenbank/FreeNOS,,
1j01/98,pages-build-deployment' 'active' '17138770,
nifanfa/MOOS,,
rcore-os/rCore-Tutorial-v3,Build Rust Doc' 'active' '22207969' 'Build Rust Doc And Run tests' 'active' '26103139' 'pages-build-deployment' 'active' '22208347,
baquer/GATE-and-CSE-Resources-for-Students,,
Zeal-Operating-System/ZealOS,pages-build-deployment' 'active' '16459829,
picodotdev/alis,alis-site-deploy' 'active' '15455338' 'pages-build-deployment' 'active' '16519984' 'Shellcheck' 'active' '30240403,
rcore-os/rCore-Tutorial-Book-v3,Deploy' 'active' '20288027' 'pages-build-deployment' 'active' '16490219,
hermitcore/libhermit-rs,Security audit' 'active' '1341939' 'Tests (nightly)' 'active' '3222955' 'Publish Docs' 'active' '10661944' 'pages-build-deployment' 'active' '16690168' 'CI' 'active' '31130242,
Supercip971/WingOS,CI' 'active' '3047173,
PDP-10/its,Build' 'active' '4186441,
xboot/xboot,pages-build-deployment' 'active' '17331372,
AlexFanw/HUSTER-CS,,
Andy-Python-Programmer/aero,Aero' 'active' '6557877' 'pages-build-deployment' 'active' '16395588,
adi1090x/CustomArch,,
ehmicky/nve,Build' 'active' '891189,
opuntiaOS-Project/opuntiaOS,Checking compatability of libkern and libc' 'active' '6546696' 'Benching ARM' 'active' '8917680' 'Benching x86' 'active' '8917681' 'Building ARM' 'active' '8917682' 'Building x86' 'active' '8917683' 'Checking code formatting' 'active' '12428056' 'Testing ARM' 'active' '13993237' 'Testing x86' 'active' '13993238' 'Testing Arm64' 'active' '27612582' 'Building Arm64' 'active' '27623271' 'Building x86_64' 'active' '30037354' 'Testing x86_64' 'active' '30037355,
xxyzz/ostep-hw,,
grahampugh/erase-install,,
frednora/gramado,,
mister0/How-to-prepare-for-google-interview-SWE-SRE,,
FlingOS/FlingOS,,
KilledByAPixel/OS13k,pages-build-deployment' 'active' '18493989,
flosse/rust-os-comparison,,
zhangpf/fuchsia-docs-zh-CN,,
PowerNex/PowerNex,,
klange/ponyos,QEMU AArch64 virt' 'active' '23037458' 'x86-64 CD Image' 'active' '23037459' 'pages-build-deployment' 'active' '22236074,
jobhope/TechnicalNote,,
thethumbler/Aquila,,
pritamzope/OS,,
WukLab/LegoOS,,
nuta/resea,Integrated Tests' 'active' '2945935' 'Unit Tests' 'active' '2945936,
fenwii/OpenHarmony,,
suvratapte/Maurice-Bach-Notes,,
DISTORTEC/distortos,Build Test' 'active' '5645361' 'Test Board Generator' 'active' '4795847' 'Unit Tests' 'active' '4771521,
qword-os/qword,,
lf-edge/eve,Eden' 'active' '2852296' 'Apache Yetus' 'active' '2867066' 'Publish' 'active' '3434732' 'Unit tests' 'active' '5134504' 'PR build' 'active' '5134505' 'Publish PR build' 'active' '5138830' 'Assets' 'active' '5235138' 'EdenGCP' 'active' '5392204,IInnttrroodduuccttiioonn' 'What makes EVE a securebydesign system is that it has been developed from the' 'ground up with security in mind EVE doesnt rely on rd party or addon' 'components to provide trust in the system but rather offers a set of well' 'defined principles on which a trust model can be built You will notice that' 'EVE doesnt call itself a trusted system  but rather a trustworthy one The' 'distinction is subtle but very important and was first articulated by Joanna' 'Rutkowska Joanna of course is the architect of Qubes OS with which EVE' 'shares a good deal of core security principles like security by' 'compartmentalization and focusing on representing all user applications as VM' 'based abstractions In EVE the same VMbased approach to defining applications' 'is built around Edge Containers specification' 'We have made an effort to provide users of EVE with a system that is both' 'practically secure and can be deployed in a zerotouch fashion In order to' 'achieve our goals we put forward a few guiding principles some of them' 'borrowed from Chromiums approach to securing mobile devices' '     Provide strong industry standard such as X cryptographic identity' '      for Edge Nodes and software entities alike' '     Make Edge Nodes securebydefault' '     Defense in depth based on the hypervisor boundary protection guarantees' '     Relying on stateoftheart hardware elements such as TPM and TEE for' '      providing robust rootoftrust and secure key management' '     Remote attestation and measured boot' '     Robust trust model between EVE and its controller' '     Workloads which are immutable' '     Secure overlay network' 'In the rest of this document we explain these principles and discuss some' 'expected use cases for Edge Node devices running EVE We then give a highlevel' 'overview of the threat model against which we will endeavor to protect our' 'users while still enabling them to make full use of their cloudbased' 'controller orchestration service' 'EEVVEE ddeeppllooyymmeenntt mmooddeell' 'Reasoning about security and trustworthiness of any system is only meaningful' 'if one understands how the system is going to be deployed and used EVE main' 'deployment targets are Edge Nodes Typically Edge Nodes are small form factor' 'ruggedized PClike systems that are deployed in physically insecure' 'environments with adhoc networking without any firewalllike guarantees This' 'type of environment is very similar to the one assumed by mobile computing' 'systems laptops tablets and smart phones and it is not a coincidence that' 'EVE shares a lot of security principles with operating systems developed for' 'mobile computing For example EVEs approach to thwarting physical attacks and' 'protecting the integrity of the software stack running on the Edge Node may' 'look similar to if youre familiar with Chromium OS' 'There is however one crucial difference between mobile computing environment' 'and Edge and that is the notion of who controls the system With mobile theres' 'always a human being end user who has direct physical access to the hardware' 'running mobile computing operating system in EVEs case that entity is a' 'remote cloudbased controller Any security related event that originates on' 'EVEs side eg measurements coming from boot sequence has to be reliably' 'passed and acknowledged by the controller and any action that is triggered on' 'the Edge Node by EVE eg storage key rotation has to be scheduled by the' 'controller' 'In short EVEs deployment model forces us to protect against an opportunistic' 'adversary with full physical access to and Edge Node and Edge Nodes networks' 'through a combination of system hardening defense in depth process isolation' 'secure autoupdate measured boot encryption and seamless integration with' 'EVEs controller security policies' 'SSeeccuurriittyy ccaappaabbiilliittiieess vvss sseeccuurriittyy ppoolliicciieess' 'At the end of the day EVE only does what its controller instructs it to do' 'This puts an enormous premium on protecting the trust between EVE instance and' 'its controller at all costs in both direction but it also allows us to have a' 'clear division of responsibilities between the two' '     EVE only implements security capabilities never security policies' '     Controller orchestrates EVEs security capabilities in order to realize' '      sophisticated policies' 'On EVEs side this separation allows us to focus on a small number of well' 'designed capabilities AKA security building blocks that are guaranteed to' 'have a well defined interactions between each other For example while EVE may' 'provide a capability for storing encrypted binary blobs on the Edge Nodes it' 'will be up to the controllers security policy to determine which pieces of' 'data will be stored there' 'Controller and its management of security policies are out of scope for this' 'document' 'EEVVEE tthhrreeaatt mmooddeell' 'Just as Chromium we consider two different kinds of adversaries' '     An opportunistic adversary' '     A dedicated adversary' 'The opportunistic adversary is just trying to compromise an individual Edge' 'Node andor data They are not targeting a specific user or enterprise and' 'they are not going to steal disassemble or modify the Edge Node but they are' 'very likely to have prolonged physical access to it This level of physical' 'access allows an opportunistic adversary a chance to replace trusted network' 'and IO connections with those of their own making though Unlike Chromium we' 'assume that this will facilitate things like DNS or other networklevel attacks' 'and will place them within an opportunistic adversarys reach' 'The dedicated adversary may target a user or an enterprise specifically for' 'attack They are willing to steal Edge Nodes to recover data or account' 'credentials not just to resell the device to make money They are also' 'willing and capable of modifying an Edge Node with extra hardware and software' 'components They may also do anything that the opportunistic adversary can do' 'The EVE contributors and community need to prioritize which security risks to' 'focus on and in which order For now we are focusing mainly on risks posed by' 'opportunistic adversaries As the project matures and the community grows we' 'will increase our scope to include dedicated adversaries and other security' 'considerations' 'EEssttaabblliisshhiinngg ttrruusstt bbeettwweeeenn EEVVEE aanndd EEVVEEss ccoonnttrroolllleerr' 'EEVVEE ttrruussttiinngg iittss ccoonnttrroolllleerr' 'Recall that EVEs deployment model presupposes a controller that can exercise' 'arbitrary control over Edge Nodes EVE provides the following capabilities that' 'can protect against an adversary trying to take control over an Edge Node by' 'pretending to be a controller' '     The controllers network address hostname and port is considered' '      immutable and can only be changed by a total reinstall of EVE' '     The controllers identity is verified by a Root CA which is also' '      considered immutable and sealed in TPM where possible This is used in' '      the TLS verification for API V and in the object signature verification' '      in API V' '     The TLS identity of the controller is verified by a Root CA This is a' '      single Root CA in API V and a larger set of root CAs plus the ability to' '      express trust in proxy certificates in API V' 'The principle that EVEs node forever gets bound to a fixed controller may' 'strike some as too restrictive but it allows a much easier reasoning about' 'security properties and since controller gets identified by the DNS name still' 'allows a certain flexibility in deployment It does however stand in stark' 'contrast to EVEs fundamental guarantee of never ever requiring a truck roll' 'to manage software on Edge Nodes Unfortunately avoiding a truck roll in' 'this particular case will require us to design a comprehensive asset transfer' 'protocol that tackles a whole host of thorny problems like' '     guaranteeing that at the completion of the asset transfer the Edge Node' '      always ends up in a pristine state so that the previous owner of the' '      Edge Node doesnt accidentally leak something to the next one' '     providing a way for the next owner to validate the hardware of the Edge' '      Node so that no additional components or firmware outside of the' '      visibility of the TPM attestation can be implanted by the previous owner' 'Given the complexity of designing such a protocol for EVE especially solving' 'the hardware validation problem we are currently punting on the problem and' 'declaring softwarebased asset transfer out of scope for now However we are' 'in no way suggesting that this should be a permanent state of affairs' 'If theres an attempted modification of either controllers address stored in' 'configserver and controllers Root CA configrootcertificatepem Edge' 'Node should get disconnected from the controller and should be forced to do a' 'hardwareassisted clear operation and start all over again' 'On systems where TPM is available the idea is to change TPM authentication' 'policy from password to HMAC based authentication TPMPolicyAuthValue with' 'hash calculated from the Root CA When device key is created HMAC from Root CA' 'will be passed which is to be honored for every TPM command related to the key' 'entity ie Each time Sign command is passed to TPM the Root CA hash needs to' 'be the same If someone changes Root CA HMAC will not match and the device' 'will be disconnected from the controller forcing the user to do a TPM clear' 'and start all over again' 'EEVVEE ttrruussttiinngg ssiiddeecchhaannnneell ccoonnffiigguurraattiioonn' 'The use of object signing is designed to enable delivering device configuration' 'using side channels such as USB sticks But the details of timestamp checks to' 'avoid replay attacks has yet to be designed and implemented Those aspects are' 'TBD' 'IIddeennttiittyy ooff EEVVEEss iinnssttaannccee' 'Each device running EVE has a unique device certificate Further if the device' 'has a TPM the device private key is generated and stored in the TPM to prevent' 'cloning the device identity' 'If the device does not have a TPMTEE for secure key generation and storage' 'then the device certificate and private key are stored in a file in the config' 'partition hence the confidentiality of the private key depends on the physical' 'protection of the storage on the device' 'The device certificates are currently selfsigned by the device with a long' 'lifetime since instead of certificate revocation for untrusted devices the' 'controller can explicitly mark them as untrustworthy the device certificate is' 'only used to communicate to the controller' 'But in the future EVE can send Certificate Signing Requests over the EVE API to' 'have the controller ask some backend CA to sign the device certificates in the' 'cases where that facilitates managing the devices' 'The device generates additional key pairs and certificates since different' 'keys are required to have different usage This includes an ECDH certificate' 'used for object encryption to minimize exposure of secrets in the' 'configuration which is generated using the TPM is available and stored in a' 'file in the persist partition There is also an attestation certificate with' 'the appropriate key usage settings to perform remote attestation from the TPM' 'and a certificate for the TPM endorsement key which is needed by some vTPM' 'use All three additional certificates are signed using the device private' 'key Collectively we call these additional deviceside certificates EdgeNode' 'certificates' 'CCoonnttrroolllleerr ttrruussttiinngg EEVVEE' 'As a result of onboarding a device the controller is told to trust the device' 'with a particular device certificate and also that it is owned by some' 'particular user of the controller' 'Separately measured boot with remote attestation will ensure that the device is' 'running the expected versions and hashes of firmware and of the EVE software' 'On successful attestation Controller provides a particular onetime token' 'called integritytoken which needs to be produced by EVE for a successful' 'configuration request Controller will reject incoming configuration requests' 'if the integritytoken does not match the expected value and will reply with' 'HTTP error code  to force EVE to reattest and generate a new integrity' 'token EVE stores this token in memory and hence is valid only for the current' 'boot session This ensures that every boot session automatically triggers a' 'fresh attestation cycle thereby measuring and validating the software' 'components all over again' 'IInniittiiaall oonnbbooaarrddiinngg' 'There are several ways in which devices running EVE can be onboarded to a' 'controller The details depend on the support available in the location eg' 'a factory where the EVE software is installed on the device' 'One approach is that EVE is booted and the TPM is used to generate the device' 'certificate and that device certificate is securely delivered from the factory' 'to the intended end user of the device That end user can then upload the' 'device certificate to the controller to claim the device A controller would' 'presumably check for attempts for more than one party claiming ownership of the' 'same device hence so that a disclosed device certificate can be detected' 'Another approach is that an onboarding token in the form of a certificate and' 'private key is added to the EVE image but the factory does not need to boot' 'EVE and upload information after installing the image When the device boots' 'EVE the first time at the installation site it will present the onboarding' 'certificate and its hardware serial numbers using a register API call to the' 'controller and the user can scan and upload the serial number to the' 'controller This has weaker security especially if serial numbers can be' 'guessed by an attacker having an account on the same controller but different' 'devices can be given different onboarding tokens to make such attacks more' 'difficult' 'The onboarding token lives in confonboardpem in the repo and this is used' 'to build the config disk image which ends up in config when EVE is booted' 'Thus the onboarding key UUID can be extracted using' 'openssl x in confonboardcertpem text  grep CN' 'The generateonboardsh script can be used to generate such onboarding' 'certificates' 'A variant of that approach is to use a random soft serial number When EVE is' 'installed it generates a configsoftserial which is a random bit UUID If' 'installed from a USB stick this serial number together with the less random' 'hardware serial number are written to a directory on the USB installer stick' 'When EVE is calling the register API it will present both the hardware serial' 'and soft serial hence if the controller has been told of the random soft' 'serial for the device we avoid depending on guessable hardware serial numbers' 'In both cases of calling the register API the factory can choose the' 'granularity of the onboarding token A single onboarding token can be used for' 'a large production run of devices or for fewer devices or even be generated' 'for each individual device The choice depends on the capabilities of the' 'factory installation site and the logistics of conveying the information' 'device certificate onboarding tokens andor serial numbers from the factory' 'to the end user' 'EEnnccrryypptteedd DDaattaa SSttoorree' 'EVE provides a security capability to enable storing sensitive information on' 'the builtin storage of the Edge Node where EVE is running while providing' 'reasonable protections from this information leaking outside of the running EVE' 'instance Note that this is not an endtoend encryption solution but rather a' 'capability that mitigates some of the attack vectors based on physical' 'possession of the Edge Node The data itself while protected inflight by the' 'transport level security mechanism such as TLS is expected to be unencrypted' 'before it lands on the Edge Node' 'One big driving factor for this is protecting Edge Containers and the Data' 'Volumes they utilize We expect a high number of Edge Containers deployed by' 'EVEs users to receive and process business sensitive information from sensors' 'and the Cloud Data collected and processed by these Edge Containers is stored' 'in their virtual storage which is backed by the hardware storage on the EVE' 'platform It is important that even if the storage drive or entire device is' 'stolen the data remains secure For this reason data should be in encrypted' 'form when it is stored' 'See Encrypting Sensitive Information at Rest at the Edge design specification' 'The storage encryption llooccaattiioonn is in persistvault and encompasses' 'application content and volumes' 'The storage encryption mmeecchhaanniissmm uses standard filesystem encryption fscrypt' 'for the ext file system and native ZFS encryption for the ZFS file system' 'This storage encryption kkeeyy is symmetric and generated solely on the edge' 'device using a TPM and then sealed into TPM using PCR values This means that' 'the key can only be retrieved from TPM when the firmware and software booting' 'sequence has not changed The encryption key is not written to disk storage' 'and must be retrieved on each boot from the TPM which is available only if the' 'PCR values are identical ie the boot chain is unchanged' 'When a system upgrades by definition the boot process changes leading to' 'different values in the PCRs and the TPM will not be able to unseal the' 'encryption key To handle this scenario the encrypted backup key mechanism' 'is used This mechanism is similar to NetworkBased Disk Encryption NBDE and' 'Shamir Secret Sharing It requires participation of both parties controller' 'and device to use the backup key' '    When the vault encryption key is generated in addition to sealing the' '      key to PCRs it also is encrypted using regular TPM encryption ie not' '      sealed to PCR values Because it is encrypted using the TPM but not' '      stored in the TPM it is not available on the device by itself either' '    The encrypted copy of the key is sent to the controller Because it is' '      encrypted using the TPM the controller cannot read the key either At' '      this point neither controller nor device by itself can read the backup' '      key' '    When the system upgrades the controller validates via remote attestation' '      that the new PCR values are acceptable and then sends the encrypted key' '      to the device' '    The device decrypts the key using the TPM It now has a valid vault' '      decryption key which it seals to the new PCR values' 'To decrypt the key one has to be on the same device with access to the same' 'TPM and the firmwaresoftware on that device has to pass the remote' 'attestation check in the controller' 'SSeeccuurree OOvveerrllaayy NNeettwwoorrkk' 'EVE provides a secure overlay network for ECOS for cases when eastwest' 'communication is needed between ECOS This is built using LISP with a strong' 'security foundation Each ECO is attached to a mesh network instance which' 'describes common parameters for the overlay network such as the location of the' 'LISP RTR' 'Each ECO has a unique certificate and private key generated when the ECO is' 'deployed and the LISP endpoint identifier contains a hash of that public key' 'This enables secure authenticated registrations with the LISP map server since' 'the device can prove that it owns the private key whose hash is in the EID as' 'part of the LISP register message' 'Two ECOs communicating using the overlay will get an secure channel since LISP' 'will perform a key exchange using the pair of public keys which are bound to' 'the EIDs per above' 'In addition the LISP map server can provide ability to limit access to the' 'mappings for certain EIDs based on the EID which is trying to look them up' 'DDeettaaiillss oonn kkeeyyss aanndd cceerrttiiffiiccaatteess' 'These details are specified in KEYSANDCERTS
mmdapl/408CSFamily,pages-build-deployment' 'active' '28787980,
tsoding/pinpog,,
CorruptedByCPU/Cyjon,,
MQuy/mos,,
byteduck/duckOS,duckOS' 'active' '4858933' 'Kernel' 'active' '4860173' 'Toolchain' 'active' '4858789,
